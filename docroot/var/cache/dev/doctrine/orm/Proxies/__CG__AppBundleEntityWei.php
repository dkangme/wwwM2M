<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Wei extends \AppBundle\Entity\Wei implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'nickname', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'lastreport', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'imei', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'operator', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'activationdate', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'modificationdate', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'chipnumber', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'idwei', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'modweiStatus', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'locationlocation', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'customer'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'nickname', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'lastreport', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'imei', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'operator', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'activationdate', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'modificationdate', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'chipnumber', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'idwei', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'modweiStatus', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'locationlocation', '' . "\0" . 'AppBundle\\Entity\\Wei' . "\0" . 'customer'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Wei $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setNickname($nickname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNickname', [$nickname]);

        return parent::setNickname($nickname);
    }

    /**
     * {@inheritDoc}
     */
    public function getNickname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNickname', []);

        return parent::getNickname();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastreport($lastreport)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastreport', [$lastreport]);

        return parent::setLastreport($lastreport);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastreport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastreport', []);

        return parent::getLastreport();
    }

    /**
     * {@inheritDoc}
     */
    public function setImei($imei)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImei', [$imei]);

        return parent::setImei($imei);
    }

    /**
     * {@inheritDoc}
     */
    public function getImei()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImei', []);

        return parent::getImei();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setOperator($operator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOperator', [$operator]);

        return parent::setOperator($operator);
    }

    /**
     * {@inheritDoc}
     */
    public function getOperator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOperator', []);

        return parent::getOperator();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivationdate($activationdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivationdate', [$activationdate]);

        return parent::setActivationdate($activationdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivationdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivationdate', []);

        return parent::getActivationdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setModificationdate($modificationdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModificationdate', [$modificationdate]);

        return parent::setModificationdate($modificationdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getModificationdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModificationdate', []);

        return parent::getModificationdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setChipnumber($chipnumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChipnumber', [$chipnumber]);

        return parent::setChipnumber($chipnumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getChipnumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChipnumber', []);

        return parent::getChipnumber();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdwei()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdwei();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdwei', []);

        return parent::getIdwei();
    }

    /**
     * {@inheritDoc}
     */
    public function setModweiStatus(\AppBundle\Entity\ModweiStatus $modweiStatus = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModweiStatus', [$modweiStatus]);

        return parent::setModweiStatus($modweiStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getModweiStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModweiStatus', []);

        return parent::getModweiStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocationlocation(\AppBundle\Entity\Location $locationlocation = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocationlocation', [$locationlocation]);

        return parent::setLocationlocation($locationlocation);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocationlocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocationlocation', []);

        return parent::getLocationlocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(\AppBundle\Entity\Customer $customer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', [$customer]);

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

}
